{"ast":null,"code":"var _jsxFileName = \"/home/hubertyu/Code/FirebaseCloudMessagePush/fcm_react_node/src/admin.js\";\nimport { Form, Input, Tooltip, Icon, Button, message } from 'antd';\nimport React from 'react';\nimport './App.css';\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          var xmlHttp = new XMLHttpRequest();\n          xmlHttp.open(\"POST\", 'https://nodejs.singtao.ca:3001/sendTopic'); // false for synchronous request\n\n          xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n          xmlHttp.send(JSON.stringify({\n            \"topic\": values.topic,\n            \"content\": {\n              \"title\": values.title,\n              \"body\": values.body,\n              \"image\": values.image,\n              \"icon\": values.icon,\n              \"url\": values.url\n            }\n          }));\n\n          xmlHttp.onreadystatechange = function () {\n            if (this.readyState === 4 && this.status === 200) {\n              var res = JSON.parse(xmlHttp.response);\n\n              if (res.status === \"SUCCESS\") {\n                message.success(res.message);\n              } else {\n                message.error(res.message);\n              }\n            }\n          };\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      style: {\n        width: \"40%\",\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginLeft: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Send Notification By Topic/Group\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"formPosition\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Topic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('topic', {\n      rules: [{\n        required: true,\n        message: 'Please input the Topic!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Notification Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('title', {\n      rules: [{\n        required: true,\n        message: 'Please input the notification title!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Notification Body\",\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('body', {\n      rules: [{\n        required: true,\n        message: 'Please input the notification body!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, \"Image\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"The Image URL must be https\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"question-circle-o\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('image', {\n      rules: [{\n        required: true,\n        message: 'Please input the image!'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, \"ICON\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"The Image URL must be https, ICON is a small image logo beside the notification.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"question-circle-o\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('icon', {\n      rules: [{\n        required: true,\n        message: 'Please input the icon!',\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, \"URL Redirection\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Where to go when the user clicks the notification\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"question-circle-o\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('url', {\n      rules: [{\n        required: true,\n        message: 'Please input the URL Redirection!',\n        whitespace: true\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        width: '20.8%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nconst WrappedRegistrationForm = Form.create({\n  name: 'register'\n})(RegistrationForm);\nexport default WrappedRegistrationForm;","map":{"version":3,"sources":["/home/hubertyu/Code/FirebaseCloudMessagePush/fcm_react_node/src/admin.js"],"names":["Form","Input","Tooltip","Icon","Button","message","React","RegistrationForm","Component","state","confirmDirty","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","xmlHttp","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","topic","title","body","image","icon","url","onreadystatechange","readyState","status","res","parse","response","success","error","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","width","margin","textAlign","marginLeft","rules","required","whitespace","WrappedRegistrationForm","create","name"],"mappings":"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","sourcesContent":["import {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Button,\n    message\n  } from 'antd';\n  import React from 'react';\n  import './App.css';\n  \n  class RegistrationForm extends React.Component {\n    state = {\n      confirmDirty: false,\n    };\n  \n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          var xmlHttp = new XMLHttpRequest();\n          xmlHttp.open( \"POST\",  'https://nodejs.singtao.ca:3001/sendTopic'); // false for synchronous request\n          xmlHttp.setRequestHeader(\"Content-Type\", \"application/json\");\n          xmlHttp.send(JSON.stringify({\n            \"topic\":values.topic,\n            \"content\" :{\n              \"title\":values.title,\n              \"body\":values.body,\n              \"image\":values.image,\n              \"icon\":values.icon,\n              \"url\":values.url\n            }\n          }));\n          xmlHttp.onreadystatechange= function() {\n            if(this.readyState === 4 && this.status === 200){\n              var res = JSON.parse(xmlHttp.response);\n              if(res.status===\"SUCCESS\") {\n                message.success(res.message);\n              } else {\n                message.error(res.message)\n              }\n            }\n          }\n        }\n      });\n    };\n\n    render() {\n      const { getFieldDecorator } = this.props.form;\n  \n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n\n      return (\n         \n        <Form {...formItemLayout} onSubmit={this.handleSubmit} style={{width:\"40%\",margin:'auto'}}>\n          <h1 style={{textAlign:'center', marginLeft:'20%'}}>Send Notification By Topic/Group</h1>\n          <div class=\"formPosition\">\n          <Form.Item label=\"Topic\">\n            {getFieldDecorator('topic', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input the Topic!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"Notification Title\">\n            {getFieldDecorator('title', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input the notification title!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"Notification Body\" hasFeedback>\n            {getFieldDecorator('body', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input the notification body!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label={\n              <span>\n                Image&nbsp;\n                <Tooltip title=\"The Image URL must be https\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            }>\n            {getFieldDecorator('image', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input the image!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>\n\n          <Form.Item\n            label={\n              <span>\n                ICON&nbsp;\n                <Tooltip title=\"The Image URL must be https, ICON is a small image logo beside the notification.\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            }\n          >\n            {getFieldDecorator('icon', {\n              rules: [{ required: true, message: 'Please input the icon!', whitespace: true }],\n            })(<Input />)}\n          </Form.Item>\n\n          <Form.Item\n            label={\n              <span>\n                URL Redirection&nbsp;\n                <Tooltip title=\"Where to go when the user clicks the notification\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            }\n          >\n            {getFieldDecorator('url', {\n              rules: [{ required: true, message: 'Please input the URL Redirection!', whitespace: true }],\n            })(<Input />)}\n          </Form.Item>\n\n\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" style={{width:'20.8%'}}>\n              Submit\n            </Button>\n          </Form.Item>\n          </div>\n        </Form>\n      );\n    }\n  }\n  \n  const WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\n  \n  export default WrappedRegistrationForm;"]},"metadata":{},"sourceType":"module"}